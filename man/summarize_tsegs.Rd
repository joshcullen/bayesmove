% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LDA_helper_functions.R
\name{summarize_tsegs}
\alias{summarize_tsegs}
\title{Summarize observations within bins per time segment}
\usage{
summarize_tsegs(dat, nbins)
}
\arguments{
\item{dat}{A data frame of \strong{only} the animal ID, time segment number,
and the discretized data for each movement variable. Animal ID and time
segment must be the first two columns of this data frame. This should be a
simplified form of the output from \code{\link{assign_tseg}}.}

\item{nbins}{numeric. A vector of the number of bins used to discretize each
movement variable. These must be in the same order as the columns within
\code{dat}.}
}
\value{
A new data frame that contains the animal ID, time segment number,
  and the counts per bin for each movement variable. The names for each of
  these bins are labeled according to the order in which the variables were
  provided to \code{summarize_tsegs}.
}
\description{
Pepares the data that has already been segmented for clustering by Latent
Dirichlet Allocation. This function summarizes the counts observed per
movement variable bin within each time segment per animal ID.
}
\examples{
#simulate data
step<- rgamma(1000, c(1, 2.5, 10), c(1, 1, 1))
angle<- runif(1000, -pi, pi)
date<- seq(c(ISOdate(2020, 6, 17, tz = "UTC")), by = "hour", length.out = 1000)
date<- date + lubridate::seconds(runif(length(date), -15, 15))  #introduce noise
dt<- as.numeric(diff(date)) * 60  #convert time difference to seconds
dt<- c(dt, NA)
id<- rep(1:10, each = 100)

#simulate breakpoints
brkpts<- rep(sort(sample(1:65, 7, replace = TRUE)), 10)
brkpts<- matrix(brkpts, 10, 7, byrow = TRUE)
brkpts<- data.frame(id = 1:10, brkpts)

#create data frame
dat<- data.frame(id, date, dt, step, angle)
dat<- round_track_time(dat = dat, id = "id", dt = "dt", date = "date", int = 3600, tol = 15)

#define limits for each bin
dist.lims<- c(quantile(step, c(0, 0.25, 0.5, 0.75, 0.95)), max(step))  #5 bins
angle.lims<- c(-pi, -3*pi/4, -pi/2, -pi/4, 0, pi/4, pi/2, 3*pi/4, pi)  #8 bins

#discretize step and angle
dat1<- discrete_move_var(dat = dat, lims = list(dist.lims, angle.lims),
                         varIn = c("step", "angle"),
                         varOut = c("SL","TA"))

#create list
dat.list<- df_to_list(dat = dat1, ind = "id")

#filter by primary time step
dat.list.filt<- filter_time(dat.list = dat.list, dt = "dt", tstep = 3600)

#assign time segments
dat2<- assign_tseg(dat = dat.list.filt, brkpts = brkpts)
dat2<- dat2[,c("id","tseg","SL","TA")]


#run function
obs<- summarize_tsegs(dat = dat2, nbins = c(5,8))


}
