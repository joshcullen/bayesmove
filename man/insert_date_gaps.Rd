% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LDA_helper_functions.R
\name{insert_date_gaps}
\alias{insert_date_gaps}
\title{Insert gaps for missing behavior proportions in time series}
\usage{
insert_date_gaps(data, tol, units)
}
\arguments{
\item{data}{A data frame containing all of the columns returned by
\code{\link{expand_behavior}}. This includes \code{id}, \code{tseg},
\code{time1}, \code{date}, \code{behavior}, and \code{prop}.}

\item{tol}{integer. The tolerance (or threshold) of time after which NA
breaks should be inserted to facilitate accurate time series plots.}

\item{units}{character. The units by which \code{tol} is specified, and
therefore how time differences between dates are measured.}
}
\value{
A data frame nearly identical to that originally produced by
  \code{\link{expand_behavior}}, but that includes inserted \code{NA} values
  to denote breaks in the date greater than \code{tol}. Additionally, two new
  columns (\code{ymin} and \code{ymax}) are included within this data frame.
  These columns can be used within \code{\link[ggplot2]{geom_ribbon}} to
  produce stacked areas that account for gaps in the time series.
}
\description{
Insert gaps for missing behavior proportions in time series
}
\examples{
\donttest{
#load data
data(tracks.seg)

#select only id, tseg, SL, and TA columns
tracks.seg2<- tracks.seg[,c("id","tseg","SL","TA")]

#summarize data by track segment
obs<- summarize_tsegs(dat = tracks.seg2, nbins = c(5,8))

#cluster data with LDA
res<- cluster_segments(dat = obs, gamma1 = 0.1, alpha = 0.1, ngibbs = 1000,
                       nburn = 500, nmaxclust = 7, ndata.types = 2)

#Extract proportions of behaviors per track segment
theta.estim<- extract_prop(res = res, ngibbs = 1000, nburn = 500, nmaxclust = 7)

#Create augmented matrix by replicating rows (tsegs) according to obs per tseg
theta.estim.long<- expand_behavior(dat = tracks.seg, theta.estim = theta.estim, obs = obs,
                               nbehav = 3, behav.names = c("Encamped","ARS","Transit"),
                               behav.order = c(1,2,3))

#Add gaps when dt > 1 week (in minutes)
theta.estim.list<- df_to_list(dat = theta.estim.long, ind = "id")
theta.estim.long2<- purrr::map(theta.estim.list,
                      ~insert_date_gaps(.x, tol = 3600, units = "sec")) \%>\%
  dplyr::bind_rows()
}

}
